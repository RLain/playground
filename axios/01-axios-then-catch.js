const axios = require('axios');
require('dotenv').config();

//üîó Serverless App endpoints to return specific error codes
const BAD_REQUEST = process.env.URL_400
const OK_REQUEST = process.env.URL_200

//üê¶ Function to test axios then/catch responses
const checkHTTPResponse = () => {
axios.get(BAD_REQUEST)
.then(response => {
    console.log(response) //Returns = see below rows 28-244
    console.log(response.data); //Returns the data object the API will return
    return response 
})
.catch(error => {
    //‚õîÔ∏è This section will execute if an error is caught including HTTP Server side issues 4XX/5XX
    console.log(error) //Returns full error response = see below rows 247-536
    console.log(error.response.status) //Returns HTTP code e.g. 400
    console.log(error.response.statusText) //Returns HTTP response e.g. Bad Request
    return error  
})
}

const executeGet = checkHTTPResponse();
console.log('executeGet' + executeGet) //Returns undefined


//‚úÖ The console.log(response) in the success path returns the following:
// {
//   status: 200,
//   statusText: 'OK',
//   headers: {
//     date: 'Tue, 04 Oct 2022 18:11:04 GMT',
//     'content-type': 'application/json; charset=utf-8',
//     'content-length': '58',
//     connection: 'close',
//     etag: 'W/"3a-6BQMVDd9id0pfppR5Cm2OpoOyKQ"',
//     'x-powered-by': 'Express',
//     'apigw-requestid': 'ZfeQ3izVifMEPUQ='
//   },
//   config: {
//     transitional: {
//       silentJSONParsing: true,
//       forcedJSONParsing: true,
//       clarifyTimeoutError: false
//     },
//     adapter: [Function: httpAdapter],
//     transformRequest: [ [Function: transformRequest] ],
//     transformResponse: [ [Function: transformResponse] ],
//     timeout: 0,
//     xsrfCookieName: 'XSRF-TOKEN',
//     xsrfHeaderName: 'X-XSRF-TOKEN',
//     maxContentLength: -1,
//     maxBodyLength: -1,
//     env: { FormData: [Function] },
//     validateStatus: [Function: validateStatus],
//     headers: {
//       Accept: 'application/json, text/plain, */*',
//       'User-Agent': 'axios/0.27.2'
//     },
//     method: 'get',
//     url: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/200',
//     data: undefined
//   },
//   request: <ref *1> ClientRequest {
//     _events: [Object: null prototype] {
//       socket: [Function (anonymous)],
//       abort: [Function (anonymous)],
//       aborted: [Function (anonymous)],
//       connect: [Function (anonymous)],
//       error: [Function (anonymous)],
//       timeout: [Function (anonymous)],
//       prefinish: [Function: requestOnPrefinish]
//     },
//     _eventsCount: 7,
//     _maxListeners: undefined,
//     outputData: [],
//     outputSize: 0,
//     writable: true,
//     destroyed: false,
//     _last: true,
//     chunkedEncoding: false,
//     shouldKeepAlive: false,
//     _defaultKeepAlive: true,
//     useChunkedEncodingByDefault: false,
//     sendDate: false,
//     _removedConnection: false,
//     _removedContLen: false,
//     _removedTE: false,
//     _contentLength: 0,
//     _hasBody: true,
//     _trailer: '',
//     finished: true,
//     _headerSent: true,
//     socket: TLSSocket {
//       _tlsOptions: [Object],
//       _secureEstablished: true,
//       _securePending: false,
//       _newSessionPending: false,
//       _controlReleased: true,
//       secureConnecting: false,
//       _SNICallback: null,
//       servername: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//       alpnProtocol: false,
//       authorized: true,
//       authorizationError: null,
//       encrypted: true,
//       _events: [Object: null prototype],
//       _eventsCount: 10,
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//       _readableState: [ReadableState],
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: false,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: undefined,
//       _server: null,
//       ssl: [TLSWrap],
//       _requestCert: true,
//       _rejectUnauthorized: true,
//       parser: null,
//       _httpMessage: [Circular *1],
//       [Symbol(res)]: [TLSWrap],
//       [Symbol(verified)]: true,
//       [Symbol(pendingSession)]: null,
//       [Symbol(async_id_symbol)]: 3,
//       [Symbol(kHandle)]: [TLSWrap],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(connect-options)]: [Object],
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _header: 'GET /200 HTTP/1.1\r\n' +
//       'Accept: application/json, text/plain, */*\r\n' +
//       'User-Agent: axios/0.27.2\r\n' +
//       'Host: a8u974q43l.execute-api.af-south-1.amazonaws.com\r\n' +
//       'Connection: close\r\n' +
//       '\r\n',
//     _keepAliveTimeout: 0,
//     _onPendingData: [Function: noopPendingOutput],
//     agent: Agent {
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       defaultPort: 443,
//       protocol: 'https:',
//       options: [Object],
//       requests: {},
//       sockets: [Object],
//       freeSockets: {},
//       keepAliveMsecs: 1000,
//       keepAlive: false,
//       maxSockets: Infinity,
//       maxFreeSockets: 256,
//       scheduling: 'fifo',
//       maxTotalSockets: Infinity,
//       totalSocketCount: 1,
//       maxCachedSessions: 100,
//       _sessionCache: [Object],
//       [Symbol(kCapture)]: false
//     },
//     socketPath: undefined,
//     method: 'GET',
//     maxHeaderSize: undefined,
//     insecureHTTPParser: undefined,
//     path: '/200',
//     _ended: true,
//     res: IncomingMessage {
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 4,
//       _maxListeners: undefined,
//       socket: [TLSSocket],
//       httpVersionMajor: 1,
//       httpVersionMinor: 1,
//       httpVersion: '1.1',
//       complete: true,
//       headers: [Object],
//       rawHeaders: [Array],
//       trailers: {},
//       rawTrailers: [],
//       aborted: false,
//       upgrade: false,
//       url: '',
//       method: null,
//       statusCode: 200,
//       statusMessage: 'OK',
//       client: [TLSSocket],
//       _consuming: false,
//       _dumped: false,
//       req: [Circular *1],
//       responseUrl: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/200',
//       redirects: [],
//       [Symbol(kCapture)]: false,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     aborted: false,
//     timeoutCb: null,
//     upgradeOrConnect: false,
//     parser: null,
//     maxHeadersCount: null,
//     reusedSocket: false,
//     host: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//     protocol: 'https:',
//     _redirectable: Writable {
//       _writableState: [WritableState],
//       _events: [Object: null prototype],
//       _eventsCount: 3,
//       _maxListeners: undefined,
//       _options: [Object],
//       _ended: true,
//       _ending: true,
//       _redirectCount: 0,
//       _redirects: [],
//       _requestBodyLength: 0,
//       _requestBodyBuffers: [],
//       _onNativeResponse: [Function (anonymous)],
//       _currentRequest: [Circular *1],
//       _currentUrl: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/200',
//       [Symbol(kCapture)]: false
//     },
//     [Symbol(kCapture)]: false,
//     [Symbol(kNeedDrain)]: false,
//     [Symbol(corked)]: 0,
//     [Symbol(kOutHeaders)]: [Object: null prototype] {
//       accept: [Array],
//       'user-agent': [Array],
//       host: [Array]
//     }
//   },
//   data: { statusCode: 200, status: 'OK (app)', message: 'Success' }
// }


//‚õîÔ∏è  The console.log(errorOutput) in the error path returns the following:
// [AxiosError: Request failed with status code 400] {
//     code: 'ERR_BAD_REQUEST',
//     config: {
//       transitional: {
//         silentJSONParsing: true,
//         forcedJSONParsing: true,
//         clarifyTimeoutError: false
//       },
//       adapter: [Function: httpAdapter],
//       transformRequest: [ [Function: transformRequest] ],
//       transformResponse: [ [Function: transformResponse] ],
//       timeout: 0,
//       xsrfCookieName: 'XSRF-TOKEN',
//       xsrfHeaderName: 'X-XSRF-TOKEN',
//       maxContentLength: -1,
//       maxBodyLength: -1,
//       env: { FormData: [Function] },
//       validateStatus: [Function: validateStatus],
//       headers: {
//         Accept: 'application/json, text/plain, */*',
//         'User-Agent': 'axios/0.27.2'
//       },
//       method: 'get',
//       url: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/400',
//       data: undefined
//     },
//     request: <ref *1> ClientRequest {
//       _events: [Object: null prototype] {
//         socket: [Function (anonymous)],
//         abort: [Function (anonymous)],
//         aborted: [Function (anonymous)],
//         connect: [Function (anonymous)],
//         error: [Function (anonymous)],
//         timeout: [Function (anonymous)],
//         prefinish: [Function: requestOnPrefinish]
//       },
//       _eventsCount: 7,
//       _maxListeners: undefined,
//       outputData: [],
//       outputSize: 0,
//       writable: true,
//       destroyed: false,
//       _last: true,
//       chunkedEncoding: false,
//       shouldKeepAlive: false,
//       _defaultKeepAlive: true,
//       useChunkedEncodingByDefault: false,
//       sendDate: false,
//       _removedConnection: false,
//       _removedContLen: false,
//       _removedTE: false,
//       _contentLength: 0,
//       _hasBody: true,
//       _trailer: '',
//       finished: true,
//       _headerSent: true,
//       socket: TLSSocket {
//         _tlsOptions: [Object],
//         _secureEstablished: true,
//         _securePending: false,
//         _newSessionPending: false,
//         _controlReleased: true,
//         secureConnecting: false,
//         _SNICallback: null,
//         servername: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//         alpnProtocol: false,
//         authorized: true,
//         authorizationError: null,
//         encrypted: true,
//         _events: [Object: null prototype],
//         _eventsCount: 10,
//         connecting: false,
//         _hadError: false,
//         _parent: null,
//         _host: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//         _readableState: [ReadableState],
//         _maxListeners: undefined,
//         _writableState: [WritableState],
//         allowHalfOpen: false,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: undefined,
//         _server: null,
//         ssl: [TLSWrap],
//         _requestCert: true,
//         _rejectUnauthorized: true,
//         parser: null,
//         _httpMessage: [Circular *1],
//         [Symbol(res)]: [TLSWrap],
//         [Symbol(verified)]: true,
//         [Symbol(pendingSession)]: null,
//         [Symbol(async_id_symbol)]: 3,
//         [Symbol(kHandle)]: [TLSWrap],
//         [Symbol(kSetNoDelay)]: false,
//         [Symbol(lastWriteQueueSize)]: 0,
//         [Symbol(timeout)]: null,
//         [Symbol(kBuffer)]: null,
//         [Symbol(kBufferCb)]: null,
//         [Symbol(kBufferGen)]: null,
//         [Symbol(kCapture)]: false,
//         [Symbol(kBytesRead)]: 0,
//         [Symbol(kBytesWritten)]: 0,
//         [Symbol(connect-options)]: [Object],
//         [Symbol(RequestTimeout)]: undefined
//       },
//       _header: 'GET /400 HTTP/1.1\r\n' +
//         'Accept: application/json, text/plain, */*\r\n' +
//         'User-Agent: axios/0.27.2\r\n' +
//         'Host: a8u974q43l.execute-api.af-south-1.amazonaws.com\r\n' +
//         'Connection: close\r\n' +
//         '\r\n',
//       _keepAliveTimeout: 0,
//       _onPendingData: [Function: noopPendingOutput],
//       agent: Agent {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         defaultPort: 443,
//         protocol: 'https:',
//         options: [Object],
//         requests: {},
//         sockets: [Object],
//         freeSockets: {},
//         keepAliveMsecs: 1000,
//         keepAlive: false,
//         maxSockets: Infinity,
//         maxFreeSockets: 256,
//         scheduling: 'fifo',
//         maxTotalSockets: Infinity,
//         totalSocketCount: 1,
//         maxCachedSessions: 100,
//         _sessionCache: [Object],
//         [Symbol(kCapture)]: false
//       },
//       socketPath: undefined,
//       method: 'GET',
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       path: '/400',
//       _ended: true,
//       res: IncomingMessage {
//         _readableState: [ReadableState],
//         _events: [Object: null prototype],
//         _eventsCount: 4,
//         _maxListeners: undefined,
//         socket: [TLSSocket],
//         httpVersionMajor: 1,
//         httpVersionMinor: 1,
//         httpVersion: '1.1',
//         complete: true,
//         headers: [Object],
//         rawHeaders: [Array],
//         trailers: {},
//         rawTrailers: [],
//         aborted: false,
//         upgrade: false,
//         url: '',
//         method: null,
//         statusCode: 400,
//         statusMessage: 'Bad Request',
//         client: [TLSSocket],
//         _consuming: false,
//         _dumped: false,
//         req: [Circular *1],
//         responseUrl: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/400',
//         redirects: [],
//         [Symbol(kCapture)]: false,
//         [Symbol(RequestTimeout)]: undefined
//       },
//       aborted: false,
//       timeoutCb: null,
//       upgradeOrConnect: false,
//       parser: null,
//       maxHeadersCount: null,
//       reusedSocket: false,
//       host: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//       protocol: 'https:',
//       _redirectable: Writable {
//         _writableState: [WritableState],
//         _events: [Object: null prototype],
//         _eventsCount: 3,
//         _maxListeners: undefined,
//         _options: [Object],
//         _ended: true,
//         _ending: true,
//         _redirectCount: 0,
//         _redirects: [],
//         _requestBodyLength: 0,
//         _requestBodyBuffers: [],
//         _onNativeResponse: [Function (anonymous)],
//         _currentRequest: [Circular *1],
//         _currentUrl: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/400',
//         [Symbol(kCapture)]: false
//       },
//       [Symbol(kCapture)]: false,
//       [Symbol(kNeedDrain)]: false,
//       [Symbol(corked)]: 0,
//       [Symbol(kOutHeaders)]: [Object: null prototype] {
//         accept: [Array],
//         'user-agent': [Array],
//         host: [Array]
//       }
//     },
//     response: {
//       status: 400,
//       statusText: 'Bad Request',
//       headers: {
//         date: 'Tue, 04 Oct 2022 18:12:40 GMT',
//         'content-type': 'application/json; charset=utf-8',
//         'content-length': '108',
//         connection: 'close',
//         'x-powered-by': 'Express',
//         etag: 'W/"6c-JVLgsEk7A7DOvvaHSyjfjF+ciw8"',
//         'apigw-requestid': 'Zfef6id9CfMEJxA='
//       },
//       config: {
//         transitional: [Object],
//         adapter: [Function: httpAdapter],
//         transformRequest: [Array],
//         transformResponse: [Array],
//         timeout: 0,
//         xsrfCookieName: 'XSRF-TOKEN',
//         xsrfHeaderName: 'X-XSRF-TOKEN',
//         maxContentLength: -1,
//         maxBodyLength: -1,
//         env: [Object],
//         validateStatus: [Function: validateStatus],
//         headers: [Object],
//         method: 'get',
//         url: 'https://a8u974q43l.execute-api.af-south-1.amazonaws.com/400',
//         data: undefined
//       },
//       request: <ref *1> ClientRequest {
//         _events: [Object: null prototype],
//         _eventsCount: 7,
//         _maxListeners: undefined,
//         outputData: [],
//         outputSize: 0,
//         writable: true,
//         destroyed: false,
//         _last: true,
//         chunkedEncoding: false,
//         shouldKeepAlive: false,
//         _defaultKeepAlive: true,
//         useChunkedEncodingByDefault: false,
//         sendDate: false,
//         _removedConnection: false,
//         _removedContLen: false,
//         _removedTE: false,
//         _contentLength: 0,
//         _hasBody: true,
//         _trailer: '',
//         finished: true,
//         _headerSent: true,
//         socket: [TLSSocket],
//         _header: 'GET /400 HTTP/1.1\r\n' +
//           'Accept: application/json, text/plain, */*\r\n' +
//           'User-Agent: axios/0.27.2\r\n' +
//           'Host: a8u974q43l.execute-api.af-south-1.amazonaws.com\r\n' +
//           'Connection: close\r\n' +
//           '\r\n',
//         _keepAliveTimeout: 0,
//         _onPendingData: [Function: noopPendingOutput],
//         agent: [Agent],
//         socketPath: undefined,
//         method: 'GET',
//         maxHeaderSize: undefined,
//         insecureHTTPParser: undefined,
//         path: '/400',
//         _ended: true,
//         res: [IncomingMessage],
//         aborted: false,
//         timeoutCb: null,
//         upgradeOrConnect: false,
//         parser: null,
//         maxHeadersCount: null,
//         reusedSocket: false,
//         host: 'a8u974q43l.execute-api.af-south-1.amazonaws.com',
//         protocol: 'https:',
//         _redirectable: [Writable],
//         [Symbol(kCapture)]: false,
//         [Symbol(kNeedDrain)]: false,
//         [Symbol(corked)]: 0,
//         [Symbol(kOutHeaders)]: [Object: null prototype]
//       },
//       data: { statusCode: 400, status: 'Bad Request (app)', error: [Object] }
//     }
//   }